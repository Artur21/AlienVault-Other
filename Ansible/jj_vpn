#!/usr/bin/python

#Ansible module to take the long way to netbios names
# ansible 10.67.1.210 -s -m jj_nmap -a "target=192.168.100.0/24"

#Import Stuff
import sys 
import os
import xml.dom.minidom
import re
import time
import json
from commands import getstatusoutput
sys.path.insert(0,os.path.abspath("/usr/lib/python2.6/dist-packages"))
import nmap


def run_scan(target):
	nm = nmap.PortScanner()
	try:
		nm.scan(hosts=target, arguments='-v0 -d0 -n -sU -p137 --script=nbstat.nse')
	except:
		print "Stderr"
	#print nm.command_line()
	return nm

	
def main():
	"""Main function"""
	module = AnsibleModule(
		argument_spec=dict(
		    target=dict(default=None, required=True)
		),
	)
	target = module.params.get('target')
	nm = run_scan(target)
	output = ''
	hosts = {}
	prads_log  = '/var/log/ossim/prads-eth0.log'
	#print vars(nm)
	#print nm.get_nmap_last_output()
	#Parse XML
	dom = xml.dom.minidom.parseString(nm.get_nmap_last_output())
	# get script output if any
	for dhost in dom.getElementsByTagName('host'):
		host = dhost.getElementsByTagName('address')[0].getAttributeNode('addr').value
		for dscript in dhost.getElementsByTagName('script'):
			script_id = dscript.getAttributeNode('id').value
			script_out = dscript.getAttributeNode('output').value
			if len(script_out):
				m = re.search('NetBIOS\sname:\s(?P<nb_name>\S+),', script_out)
				if m:
					#output += "Host: " + host + ' NetBIOS Name: ' + m.group('nb_name').title() + "\n"
					hosts[host] = m.group('nb_name').title()
	if len(hosts):
		if not os.path.exists('/etc/ossim/agent/plugins/prads_eth0.cfg.local'):
			#No local file to grab hostnames. Create one
			output += "Adding Prads Config\n"
			f = open('/etc/ossim/agent/plugins/prads_eth0.cfg.local', 'w')
			f.write('[01 - Hostname]\nevent_type=idm-event\nregexp="(?P<asset_ip>\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3})\|(?P<asset_name>.*)"\ninventory_source=6\nip={$asset_ip}\nhostname={$asset_name}\n')
			f.close()
			output += "Restarting Agent\n"
			(status, shell_output) = getstatusoutput("service ossim-agent restart")
			output += shell_output
			output += "\nWaiting\n"
			time.sleep(7)
		
		output += "Adding Hosts...\n"
		f = open(prads_log, 'a+')
		for h,n in hosts.iteritems():
			f.write(h + '|' + n + "\n")
		f.close
			
	module.exit_json(changed=True, msg=output, hosts_found = hosts)
# this is magic, see lib/ansible/module_common.py
#<<INCLUDE_ANSIBLE_MODULE_COMMON>>
main()
